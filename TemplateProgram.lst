Microsoft (R) Macro Assembler Version 14.24.28316.0	    04/07/20 21:50:45
Template.asm						     Page 1 - 1


				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; CS340 Assembly Language Course   							   ;;
				;; Brett Dahmer													   ;;
				;; Student ID# 00076158											   ;;
				;; Program: Finds the largest product of four numbers that can be  ;;
				;; in a (row, column, or diagonally).                              ;;
				;; Requires: Input file, output file.                              ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 



 00000000			.data

				;ALIGN DWORD
				;---Control Characters---;
 = 00000000			NULL	 EQU 00h         
 = 0000000A			LF		 EQU 0ah         
 = 0000000D			CR		 EQU 0dh         
 = 00000020			SPC 	 EQU 20h

				;student  EQU 0
				;grade	 EQU 14
				;linky	 EQU 18

				;mPry		;;macro to print.
				;;char:req    ;this is a print macro.

				;recs byte 100 dup (28 dup (?))  ;setting up my own records 100 students max storing 28 bytes each  

				;---Storage for Numerical Values---;
 00000000 0000000A		TEN			dword	10							

				;---Input and Output filenames and handles---;
 00000004 42 44 61 68 6D	outFN		byte	"BDahmer_ResultsLinkList.txt", NULL		;output filename.
	   65 72 5F 52 65
	   73 75 6C 74 73
	   4C 69 6E 6B 4C
	   69 73 74 2E 74
	   78 74 00
 00000020 47 72 61 64 65	inFN     	byte	"Grades.txt", NULL  					;input filename.
	   73 2E 74 78 74
	   00
 0000002B 00000000		infile		dword	?										;input file handle, value holder.
 0000002F 00000000		outfile		dword	?										;output file handle, value holder.

				;---Strings---;
 00000033 3D 3D 3D 3D 3D	fline       byte  "=================================================================", CR, LF, NULL
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   0D 0A 00
 00000077 4E 61 6D 65 20	Msg0	    byte  "Name Grade Sort Link List Program Created by: BRETT DAHMER", CR, LF, NULL
	   47 72 61 64 65
	   20 53 6F 72 74
	   20 4C 69 6E 6B
	   20 4C 69 73 74
	   20 50 72 6F 67
	   72 61 6D 20 43
	   72 65 61 74 65
	   64 20 62 79 3A
	   20 42 52 45 54
	   54 20 44 41 48
	   4D 45 52 0D 0A
	   00

				;---Format Strings---;
 000000B4 0D 0A 00		nline		byte   CR, LF, NULL						;new line string.
				;---Storage For Ary1 and Buffer---;
 000000B7  00000400 [		BUFF	 	byte	 1024 dup(?), CR, CR			;size of the buffer (might be overkill).
	    00
	   ] 0D 0D
 000004B9  00000400 [		Ary1		dword    1024 dup(' '), CR				;size of the array.(might be overkill).
	    00000020
	   ] 0000000D
				          
 000014BD 00000000		byteCount	dword ?				;stores the total bytes from the Buffer.
 000014C1 00000000		valCtr		dword ?				;stores the number of values in Ary1, used as a counter for filling the array.
 000014C5 0000001E		val			dword 30
 000014C9 00000000		nSize		dword 0
 000014CD 00000000		MAXPTS		dword ?
				;---MACROS---;
				mPry Macro BUFF, val
				  lea esi, BUFF
				  mov ecx, LENGTHOF BUFF
				  m1:
					mov al,[esi]		;puts random character from parameter into al register.
					call WriteChar
					inc esi
					mov al,[esi]
					dec ecx
					cmp ecx, 0
					jne m1	
					pop eax
				endm
				mPutchar macro char
					push eax
					mov al, char
					call WriteChar
					pop eax
				endm
				;mNode Macro BUFF, val
				;	lea esi, 


 0000001C			Student Struct
 00000000  00000014 [			fname  byte 20 dup (?)
	    00
	   ]
 03740003  00000000			grade  dword ?
 03740007  00000000			Linky dword NULL
				Student ends
				;;;;;;;;;;;;;;;;;;;;;;
				;RecNode Struct 
				;	Studs Student 20 dup (<>);holds twenty students.
				;	Linky	dword ?          ;holds the linked address.
				;RecNode ends

 000014D1  00000014 [		     NS Student 20 dup (<>)
	    00000014 [
	     00
	    ] 00000000
	    00000000
	   ]

 = 00000002				num = 2
 00000000			.code

 00000000			main PROC
 00000000  E8 000000F7			call ReadFileIntoBuffer				;reads an input file into a buffer.
 00000005  8D 35 000000B7 R		lea esi, BUFF
 0000000B  8A 06			mov al, [esi]
 0000000D  E8 0000011F			call ATOI
 00000012  A3 000014CD R		mov MAXPTS, eax						;storing max points, 300.
				    

					
				;mov eax, (Student PTR [edi]).fname
				;TestStructs[1*SizeOfTests].s2

					;lea eax, NS[1*Sizeof Student].fname
					;mov num, 2
					;mov edi, OFFSET NS					;point at the first object.	
 00000017  BF 00001509 R		mov edi, OFFSET NS[2*Sizeof Student]
 0000001C  83 C6 02			add esi, 2							;increment esi 2 to get past CR
 0000001F  33 DB			xor ebx, ebx						;clear register ebx.
 00000021  33 C0			xor eax, eax						;clear register eax.
 00000023  8A 1E			mov bl, [esi]
 00000025			t1:
 00000025  88 1F			mov (Student PTR[edi]).fname, bl	;move first character into fname[index in the array].
 00000027  8A 07			mov al, (Student PTR[edi]).fname	;move first character from struct into al register
 00000029  E8 00000000 E		call WriteChar				
 0000002E  47				inc edi
 0000002F  46				inc esi
 00000030  8A 1E			mov bl, [esi]
 00000032  80 FB 20			cmp bl, SPC
 00000035  75 EE		jne t1
 00000037  88 1F			mov (Student PTR[edi]).fname, bl ;move one space into name.

 00000039  33 DB			xor ebx, ebx
 0000003B  33 C0			xor eax, eax
				   
 0000003D  BF 00001509 R		mov edi, OFFSET NS[num*Sizeof Student]				 ;point at first value in structure.
 00000042			t2:	
 00000042  8A 07			mov al, (Student PTR[edi]).fname
 00000044  E8 00000000 E		call WriteChar
 00000049  47				inc edi
 0000004A  8A 1F			mov bl, [edi]
 0000004C  80 FB 20			cmp bl, SPC
 0000004F  75 F1			jne t2




				;mov (Student.fname, [esi]
					;mov eax, (Student PTR [edi]).fname
					;esi is pointing to the first name

 00000051  83 C6 02			add esi, 2
					;mov eax, (RecNode PTR [esi]).Linky
 00000054  B9 00000006			mov ecx, 6
 00000059			P1:
					;mov al, (RecNode PTR [esi]).Student
 00000059  E8 00000000 E		call WriteChar
 0000005E  46				inc esi
 0000005F  8A 06			mov al, [esi]
 00000061  3C 20			cmp al, SPC
 00000063  75 F4			jne P1


 00000065  33 C0			xor eax, eax
 00000067  8D 35 000000B7 R	    lea esi, BUFF
 0000006D  8B 46 05			mov eax, 5[esi]
 00000070  E8 00000000 E		Call WriteChar

 00000075  8D 35 000000B7 R		lea esi, BUFF
 0000007B  8B 46 13			mov eax, 19[esi]
 0000007E  E8 00000000 E		Call WriteChar
				    
 00000083  E8 00000063			call OutputFileOpenSetup			;opens output file and sets it up.


 00000088  A1 0000002F R		mov eax, outfile					;moving handle into eax register for output file.
 0000008D  E8 00000000 E		call CloseFile						;closing output file.   
					
					invoke ExitProcess, 0
 00000092  6A 00	   *	    push   +000000000h
 00000094  E8 00000000 E   *	    call   ExitProcess
 00000099			main endp
					
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;Procedure to TITLE OF PROGRAM.         ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000099			Print_Title proc
 00000099  8D 35 00000033 R			lea esi, fline					;format line bunch of ===.
 0000009F  E8 000000D8				call PrintToFile				;prints to file.
 000000A4  8D 35 00000077 R			lea esi, Msg0					;The program Title.
 000000AA  E8 000000CD				call PrintToFile				;prints to file.
 000000AF  8D 35 00000033 R			lea esi, fline					;format line bunch of ===.
 000000B5  E8 000000C2				call PrintToFile				;prints to file.
 000000BA  C3					ret								;return to main proc.
 000000BB			Print_Title endp	

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; FillAry will convert size value from  ;;
				;; byte to dword and put into an array.  ;;
				;; returns with esi pointing to last     ;;
				;; position used in the buffer (BUFF).   ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000000BB			FillAry Proc
 000000BB  B9 00000014			mov ecx, 20							;total character returns. Since 20 x 20 array.
 000000C0				  L1:
 000000C0  8B 06				mov eax, [esi]					;move pointed to value into eax register.	
 000000C2  3C 20				cmp al, SPC						;compare al with space.
 000000C4  74 18			 je	foundSpace					    ;looking to see if space was found.
													
 000000C6					GoOn:
 000000C6  80 FB 0D					cmp bl, CR					;checking to see if return character.
 000000C9  74 16			 je	foundCR							;branches to the end of the procedures.

 000000CB  E8 00000061					call ATOI					;call ascii to integer, uses esi push to stack if needed later.
 000000D0  89 07					mov [edi], eax				;move integer into Polygon1 (P1).
 000000D2  FF 05 000014C1 R				inc valctr
 000000D8  83 C7 04					add edi, 4					;increment edi pointer.
 000000DB  46						inc esi						;increment esi pointer, it is pointing to BUFF (the buffer).
 000000DC  EB E2				    jmp L1

 000000DE				 foundSpace:
 000000DE  46						inc esi 					;increment buff pointer..
 000000DF  EB DF					jmp L1						;branch to L1

 000000E1				 foundCR:
 000000E1  46						inc esi						;increment buff pointer.
 000000E2  B3 00					mov bl, 0					;clear bl register.
 000000E4  49						dec ecx						;dec ecx register.
 000000E5  83 F9 00					cmp ecx, NULL				;compare to NULL, if not return to L1 branch.
 000000E8  75 D6			jne L1
 000000EA  C3					    ret							;return to main procedure.
 000000EB			FillAry endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; Procedure OutputFileOpenSetup         ;;
				;; Opens output file and stores handle   ;;
				;; in outfile.                           ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000000EB			OutputFileOpenSetup Proc
 000000EB  8D 15 00000004 R			lea edx, outFN				    ;outfile 
 000000F1  E8 00000000 E			call CreateOutputFile           ;creating output file
 000000F6  A3 0000002F R			mov outfile, eax			    ;move the handle from eax into outfile to store.
 000000FB  C3					ret							    ;return to main procedure.
 000000FC			OutputFileOpenSetup endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; Procedure ReadFileIntoBuffer          ;;
				;; reads the input file into a buffer    ;;
				;; returns to main procedure when done.  ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000000FC			ReadFileIntoBuffer Proc
 000000FC  8D 15 00000020 R			lea edx, inFN	                ;move inFN (input file) into edx for input file parameter.
 00000102  E8 00000000 E			call OpenInputFile			    ;opening input file.
 00000107  A3 0000002B R			mov infile, eax				    ;move the handle from eax into input file.
 0000010C  B9 00000400				mov ecx, 1024				    ;move buffer size into ecx counter.
 00000111  8D 15 000000B7 R			lea edx, BUFF		            ;buffer size in edx.
 00000117  A1 0000002B R			mov eax, infile				    ;move handle for infile into eax.
 0000011C  E8 00000000 E			call ReadFromFile			    ;read file into buffer.
 00000121  A3 000014BD R		    mov byteCount, eax
 00000126  A1 0000002B R			mov eax, infile				    ;moving infile handle into eax.
 0000012B  E8 00000000 E			call CloseFile				    ;closing input file.
 00000130  C3					ret							    ;return to main proc.
 00000131			ReadFileIntoBuffer endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; Procedure to ASCII to Integer.        ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000131			ATOI Proc
 00000131  B8 00000000			mov eax, 0							;zero out eax register.
 00000136  BB 00000000			mov ebx, 0							;zero out ebx register.
 0000013B			NextDigit:
 0000013B  8A 1E				mov bl, [esi]					;move value esi points to into bl   
 0000013D  80 FB 30				cmp bl, '0'						;compare digit to 0 character
 00000140  7C 14			jl getOut							;jump if less than
 00000142  80 FB 39				cmp bl, '9'						;compare digit to 9 character
 00000145  7F 0F			jg getOut							;jump if greater than
 00000147  80 E3 0F				AND bl, 0Fh

 0000014A  0F AF 05			    imul eax, TEN					;multiply eax by 10
	   00000000 R
 00000151  03 C3			    add eax, ebx					;add ebx register to eax register.
 00000153  46					inc esi							;increment the ptr
 00000154  EB E5		jmp NextDigit
 00000156				getOut:
 00000156  C3					ret								;returns to main proc.
 00000157			ATOI endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;Procedure to Integer to ASCII.         ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
 00000157			ITOA Proc
 00000157  8B 1D 00000000 R		mov ebx, TEN						;setting base value for the ascii number.
 0000015D				NextDigit: 
 0000015D  BA 00000000				mov edx, NULL					;setup for divide
 00000162  F7 FB				idiv ebx						;edx ax/ebx
 00000164  83 CA 30				OR edx, '0'						;converting digit to ASCII by adding 30h or '0'
 00000167  4E					dec esi							;decrementing the pointer to get to the next digit  <----goes backwards from LSB to MSB
 00000168  88 16				mov [esi],dl					;mov dl not location esi is pointing at.
 0000016A  83 F8 00				cmp eax, NULL					;compares eax to 0.
 0000016D  75 EE			jne NextDigit
 0000016F  C3				ret									;returns to main proc.
 00000170			ITOA endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;Procedure to BlankOut Memory.          ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000170			BlankOut Proc
 00000170  B0 20			mov al, SPC							;moving a blank to al.
 00000172			blank:
 00000172  88 06			mov[esi], al						;point to al.
 00000174  46				inc esi								;increment esi pointer.
 00000175  49				dec ecx								;decrement ecx counter.
 00000176  83 F9 00			cmp ecx, NULL						;compare ecx to NULL.
 00000179  75 F7		jne blank
 0000017B  C3				ret									;return to main proc.
 0000017C			BlankOut endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; Procedure to print data to file.      ;;
				;; uses esi to print characters.         ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000017C			PrintToFile Proc
 0000017C			next:
 0000017C  8A 16		     mov dl, [esi]						;moving value esi points to into dl
 0000017E  80 FA 00		     cmp dl, NULL						;comparing to 0.
 00000181  74 14		     je outOfHere
 00000183  8B D6				mov edx, esi					;mov esi into edx.
 00000185  B9 00000001				mov ecx, 1						;move 1 into ecx.
 0000018A  A1 0000002F R			mov eax, outfile				;setting eax to handle for outfile.
 0000018F  E8 00000000 E			call WriteToFile				;calling WriteToFile proc.
 00000194  46					inc esi							;incrementing esi index.
 00000195  EB E5		jmp next
 00000197				outOfHere:
 00000197  C3					ret								;returns to main proc.
 00000198			PrintToFile endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;-----------END OF PROGRAM--------------;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				end main
Microsoft (R) Macro Assembler Version 14.24.28316.0	    04/07/20 21:50:45
Template.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

mPry . . . . . . . . . . . . . .	Proc
mPutchar . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
Student  . . . . . . . . . . . .	 0000001C
  fname  . . . . . . . . . . . .	 00000000	 Byte
  grade  . . . . . . . . . . . .	 00000014	 DWord
  Linky  . . . . . . . . . . . .	 00000018	 DWord
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00001701 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000198 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ATOI . . . . . . . . . . . . . .	P Near	 00000131 _TEXT	Length= 00000026 Public STDCALL
  NextDigit  . . . . . . . . . .	L Near	 0000013B _TEXT	
  getOut . . . . . . . . . . . .	L Near	 00000156 _TEXT	
BlankOut . . . . . . . . . . . .	P Near	 00000170 _TEXT	Length= 0000000C Public STDCALL
  blank  . . . . . . . . . . . .	L Near	 00000172 _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FillAry  . . . . . . . . . . . .	P Near	 000000BB _TEXT	Length= 00000030 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000000C0 _TEXT	
  GoOn . . . . . . . . . . . . .	L Near	 000000C6 _TEXT	
  foundSpace . . . . . . . . . .	L Near	 000000DE _TEXT	
  foundCR  . . . . . . . . . . .	L Near	 000000E1 _TEXT	
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ITOA . . . . . . . . . . . . . .	P Near	 00000157 _TEXT	Length= 00000019 Public STDCALL
  NextDigit  . . . . . . . . . .	L Near	 0000015D _TEXT	
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputFileOpenSetup  . . . . . .	P Near	 000000EB _TEXT	Length= 00000011 Public STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PrintToFile  . . . . . . . . . .	P Near	 0000017C _TEXT	Length= 0000001C Public STDCALL
  next . . . . . . . . . . . . .	L Near	 0000017C _TEXT	
  outOfHere  . . . . . . . . . .	L Near	 00000197 _TEXT	
Print_Title  . . . . . . . . . .	P Near	 00000099 _TEXT	Length= 00000022 Public STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFileIntoBuffer . . . . . . .	P Near	 000000FC _TEXT	Length= 00000035 Public STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000099 Public STDCALL
  t1 . . . . . . . . . . . . . .	L Near	 00000025 _TEXT	
  t2 . . . . . . . . . . . . . .	L Near	 00000042 _TEXT	
  P1 . . . . . . . . . . . . . .	L Near	 00000059 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
Ary1 . . . . . . . . . . . . . .	DWord	 000004B9 _DATA	
BUFF . . . . . . . . . . . . . .	Byte	 000000B7 _DATA	
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CR . . . . . . . . . . . . . . .	Number	 0000000Dh   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LF . . . . . . . . . . . . . . .	Number	 0000000Ah   
MAXPTS . . . . . . . . . . . . .	DWord	 000014CD _DATA	
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
Msg0 . . . . . . . . . . . . . .	Byte	 00000077 _DATA	
NS . . . . . . . . . . . . . . .	Student	 000014D1 _DATA	
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
SPC  . . . . . . . . . . . . . .	Number	 00000020h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TEN  . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
byteCount  . . . . . . . . . . .	DWord	 000014BD _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fline  . . . . . . . . . . . . .	Byte	 00000033 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
inFN . . . . . . . . . . . . . .	Byte	 00000020 _DATA	
infile . . . . . . . . . . . . .	DWord	 0000002B _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
nSize  . . . . . . . . . . . . .	DWord	 000014C9 _DATA	
nline  . . . . . . . . . . . . .	Byte	 000000B4 _DATA	
num  . . . . . . . . . . . . . .	Number	 00000002h   
outFN  . . . . . . . . . . . . .	Byte	 00000004 _DATA	
outfile  . . . . . . . . . . . .	DWord	 0000002F _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
valCtr . . . . . . . . . . . . .	DWord	 000014C1 _DATA	
val  . . . . . . . . . . . . . .	DWord	 000014C5 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
