Microsoft (R) Macro Assembler Version 14.24.28316.0	    04/19/20 19:45:18
BDahmer_LinkList.asm					     Page 1 - 1


				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; CS340 Assembly Language Course   							   ;;
				;; Brett Dahmer													   ;;
				;; Student ID# 00076158											   ;;
				;; Program: Link List											   ;;
				;; Requires: Input file, output file.                              ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
				;---Control Characters---;
 = 00000000			NULL	EQU 00h				;Zero Value.
 = 0000000A			LF		EQU 0ah             ;Line Feed.
 = 0000000D			CR		EQU 0dh				;Carriage Return.
 = 00000020			SPC 	EQU 20h				;Space.
				;---Arrow Keys---;
 = 0000004B			LA		EQU 4Bh				;Left  Arrow.
 = 0000004D			RA		EQU	4Dh				;Right Arrow.
 = 00000048			UA		EQU	48h				;Up    Arrow.
 = 00000050			DA		EQU 50h				;Down  Arrow.

				;---Storage for Numerical Values---;
 00000000 0000000A		TEN			dword	10							

				;---Input and Output filenames and handles---;
 00000004 42 44 61 68 6D	outFN		byte	"BDahmer_ResultsLinkList.txt", NULL		;output filename.
	   65 72 5F 52 65
	   73 75 6C 74 73
	   4C 69 6E 6B 4C
	   69 73 74 2E 74
	   78 74 00
 00000020 47 72 61 64 65	inFN     	byte	"Grades.txt", NULL  					;input filename.
	   73 2E 74 78 74
	   00
 0000002B 00000000		infile		dword	?										;input file handle, value holder.
 0000002F 00000000		outfile		dword	?										;output file handle, value holder.

				;---CALCULATOR ON CONSOLE---;
 00000033 20 5F 5F 5F 5F	calStr	    byte " _____________________  ",CR,LF ;ROW 0, 22 length
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 20 20 0D
	   0A
 0000004D  7C 20 20 5F 5F				byte "|  _________________  | ",CR,LF ;ROW 1, 22 length
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   20 20 7C 20 0D
	   0A
 00000067  7C 20 7C 20 20				byte "| |                 | | ",CR,LF ;ROW 2, 22 length
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 20 7C 20 0D
	   0A
 00000081  7C 20 7C 5F 5F				byte "| |_________________| | ",CR,LF ;ROW 3, 22 length
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   7C 20 7C 20 0D
	   0A
 0000009B  7C 20 20 5F 5F				byte "|  ___ ___ ___   ___  | ",CR,LF ;ROW 4, 22 length
	   5F 20 5F 5F 5F
	   20 5F 5F 5F 20
	   20 20 5F 5F 5F
	   20 20 7C 20 0D
	   0A
 000000B5  7C 20 7C 20 37				byte "| | 7 | 8 | 9 | | + | | ",CR,LF ;ROW 5, 22 length (7)= 4pos
	   20 7C 20 38 20
	   7C 20 39 20 7C
	   20 7C 20 2B 20
	   7C 20 7C 20 0D
	   0A
 000000CF  7C 20 7C 5F 5F				byte "| |___|___|___| |___| | ",CR,LF ;ROW 6, 22 length
	   5F 7C 5F 5F 5F
	   7C 5F 5F 5F 7C
	   20 7C 5F 5F 5F
	   7C 20 7C 20 0D
	   0A
 000000E9  7C 20 7C 20 34				byte "| | 4 | 5 | 6 | | - | | ",CR,LF ;ROW 7, 22 length
	   20 7C 20 35 20
	   7C 20 36 20 7C
	   20 7C 20 2D 20
	   7C 20 7C 20 0D
	   0A
 00000103  7C 20 7C 5F 5F				byte "| |___|___|___| |___| | ",CR,LF ;ROW 8, 22 length
	   5F 7C 5F 5F 5F
	   7C 5F 5F 5F 7C
	   20 7C 5F 5F 5F
	   7C 20 7C 20 0D
	   0A
 0000011D  7C 20 7C 20 31				byte "| | 1 | 2 | 3 | | * | | ",CR,LF ;ROW 9, 22 length
	   20 7C 20 32 20
	   7C 20 33 20 7C
	   20 7C 20 2A 20
	   7C 20 7C 20 0D
	   0A
 00000137  7C 20 7C 5F 5F				byte "| |___|___|___| |___| | ",CR,LF ;ROW 10, 22 length
	   5F 7C 5F 5F 5F
	   7C 5F 5F 5F 7C
	   20 7C 5F 5F 5F
	   7C 20 7C 20 0D
	   0A
 00000151  7C 20 7C 20 43				byte "| | C | 0 | = | | / | | ",CR,LF ;ROW 11, 22 length
	   20 7C 20 30 20
	   7C 20 3D 20 7C
	   20 7C 20 2F 20
	   7C 20 7C 20 0D
	   0A
 0000016B  7C 20 7C 5F 5F				byte "| |___|___|___| |___| | ",CR,LF ;ROW 12, 22 length
	   5F 7C 5F 5F 5F
	   7C 5F 5F 5F 7C
	   20 7C 5F 5F 5F
	   7C 20 7C 20 0D
	   0A
 00000185  7C 5F 5F 5F 5F				byte "|_____________________| ",CR,LF, NULL ;ROW 13, 22 length
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 7C 20 0D
	   0A 00
				;---Strings---;
 000001A0 3D 3D 3D 3D 3D	fline       byte  "=================================================================", CR, LF, NULL
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   3D 3D 3D 3D 3D
	   0D 0A 00
 000001E4 0D 0A 00		nline		byte   CR, LF, NULL						;new line string.
 000001E7 49 6E 74 65 72	Msg0	    byte  "Interactive Calculator Program Created by: BRETT DAHMER", CR, LF, NULL
	   61 63 74 69 76
	   65 20 43 61 6C
	   63 75 6C 61 74
	   6F 72 20 50 72
	   6F 67 72 61 6D
	   20 43 72 65 61
	   74 65 64 20 62
	   79 3A 20 42 52
	   45 54 54 20 44
	   41 48 4D 45 52
	   0D 0A 00

				;---Format Strings---;

				;---Storage For Ary1 and Buffer---;
 00000221  00000400 [		BUFF	 	byte	 1024 dup(?), CR, CR			;size of the buffer (might be overkill).
	    00
	   ] 0D 0D
 00000623  00000011 [		Ary			byte     17 dup(" ")				    ;size of the array.(might be enough).
	    20
	   ]
 00000634 11			AryEnd		byte	($ - Ary)						;end of the array.
 00000635  00000011 [		Bry			byte     17 dup(" ")
	    20
	   ]
 00000646 00000000		byteCount	dword ?
				;---MACROS---;
				 ; mPry Macro array, len
				 ;lea esi, array
				 ;mov ecx, len;LENGTHOF array
				 ; m1:
					;mov al,[esi]				;puts random character from parameter into al register.
					;call WriteChar
					;inc esi
					;mov al,[esi]
					;cmp ecx, 0
					;loop m1	
					;pop eax
				;endm
				mPry Macro array, len
				  lea esi, array		;array given.
				  mov ecx, 32			;length given.
				  call PrintToFile	    ;print stuff.
				endm
				mCapit Macro array, ecx
					mov edx, 20
				  C1:	
					mov al, [esi]
					mov bl, BitC
					AND al, bl
					mov [esi], al
					add esi, edx
					add edx, 20
				  loop C1
				endm
				mPutchar macro char
					push eax
					mov al, char
					call WriteChar
					pop eax
				endm

 00000000			.code

 00000000			main PROC
 00000000  B8 0000000B		mov eax,11 +(black SHL 4)
 00000005  E8 00000000 E	call SetTextColor
 0000000A  8D 3D 00000033 R	lea edi, calStr
 00000010  E8 00000024		call WriteStr

 00000015  B9 0000000A			mov ecx, 10
 0000001A  8D 35 00000623 R		lea esi, Ary
 00000020  33 D2			xor edx,edx
 00000022  B6 05			mov dh, 5	;row
 00000024  B2 04			mov dl, 4	;col
 00000026  E8 00000000 E		call Gotoxy
 0000002B			P1:
 0000002B  E8 00000018			call ReadLine
					
 00000030  E1 F9			loopz P1





					invoke ExitProcess, 0
 00000032  6A 00	   *	    push   +000000000h
 00000034  E8 00000000 E   *	    call   ExitProcess
 00000039			main endp
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;;Procedure to write a string to console;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000039			WriteStr proc
 00000039			Nextchar:	
 00000039  8A 07				mov al,[edi]			;increment edi by one character through the array of chars byte size
 0000003B  3C 00		   		cmp al,NULL				;checking to see if al is equal to zero
 0000003D  74 08				je nearEnd  			;jump out of this procedure
 0000003F  E8 00000000 E			call WriteChar			;invoked character write to console
 00000044  47					inc edi					;move to next character.
 00000045  EB F2		jmp Nextchar
 00000047			nearEnd:
 00000047  C3					ret
 00000048			WriteStr endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;;Procedure to Read Character from keyboard;;
				;;;then write character to console;;;;;;;;;;;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000064A			.data
 0000064A 02				row byte 2
 0000064B 11				col byte 17
 = 00000011			   fpos EQU  17
 00000048			.code
 00000048			ReadLine Proc				;start of procedure

 00000048				newchar:
 00000048  E8 00000000 E			call ReadChar		;read character from keyboard
 0000004D  80 FC 4D				cmp ah, RA
 00000050  74 02			je  R_Arrow
 00000052  32 D2		        xor dl,dl
 00000054				R_Arrow:
 00000054  80 C2 04				add dl, 4
 00000057  E8 00000000 E			call Gotoxy
 0000005C  88 06				mov [esi], al		;point esi to al
						;xor edx, edx
						;mov dh, row
						;mov dl, col
 0000005E  E8 00000000 E			call Gotoxy
 00000063  E8 00000000 E			call WriteChar		;write charater to the screen
 00000068  FE 0D 0000064B R			dec col
 0000006E  3C 0D				cmp al, CR			;compares last character to CR.
 00000070  74 03			 je BEGONE				;jumps to BEGONE
 00000072  46					inc esi				;increment esi (a ptr).
 00000073  EB D3			jmp newchar				;jumps to newchar which is the beginning of this proc.
 00000075				BEGONE:
 00000075  C3					ret					;returns to main proc
 00000076			ReadLine endp				;end of procedure

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;Procedure to TITLE OF PROGRAM.         ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000076			Print_Title proc
 00000076  8D 35 000001A0 R			lea esi, fline					;format line bunch of ===.
 0000007C  E8 000000A8				call PrintToFile				;prints to file.
 00000081  8D 35 000001E7 R			lea esi, Msg0					;The program Title.
 00000087  E8 0000009D				call PrintToFile				;prints to file.
 0000008C  8D 35 000001A0 R			lea esi, fline					;format line bunch of ===.
 00000092  E8 00000092				call PrintToFile				;prints to file.
 00000097  C3					ret								;return to main proc.
 00000098			Print_Title endp	


				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; Procedure OutputFileOpenSetup         ;;
				;; Opens output file and stores handle   ;;
				;; in outfile.                           ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000098			OutputFileOpenSetup Proc
 00000098  8D 15 00000004 R			lea edx, outFN				    ;outfile 
 0000009E  E8 00000000 E			call CreateOutputFile           ;creating output file
 000000A3  A3 0000002F R			mov outfile, eax			    ;move the handle from eax into outfile to store.
 000000A8  C3					ret							    ;return to main procedure.
 000000A9			OutputFileOpenSetup endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; Procedure ReadFileIntoBuffer          ;;
				;; reads the input file into a buffer    ;;
				;; returns to main procedure when done.  ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000000A9			ReadFileIntoBuffer Proc
 000000A9  8D 15 00000020 R			lea edx, inFN	                ;move inFN (input file) into edx for input file parameter.
 000000AF  E8 00000000 E			call OpenInputFile			    ;opening input file.
 000000B4  A3 0000002B R			mov infile, eax				    ;move the handle from eax into input file.
 000000B9  B9 00000400				mov ecx, 1024				    ;move buffer size into ecx counter.
 000000BE  8D 15 00000221 R			lea edx, BUFF		            ;buffer size in edx.
 000000C4  A1 0000002B R			mov eax, infile				    ;move handle for infile into eax.
 000000C9  E8 00000000 E			call ReadFromFile			    ;read file into buffer.
 000000CE  A3 00000646 R		    mov byteCount, eax
 000000D3  A1 0000002B R			mov eax, infile				    ;moving infile handle into eax.
 000000D8  E8 00000000 E			call CloseFile				    ;closing input file.
 000000DD  C3					ret							    ;return to main proc.
 000000DE			ReadFileIntoBuffer endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; Procedure to ASCII to Integer.        ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000000DE			ATOI Proc
 000000DE  B8 00000000			mov eax, 0							;zero out eax register.
 000000E3  BB 00000000			mov ebx, 0							;zero out ebx register.
 000000E8			NextDigit:
 000000E8  8A 1E				mov bl, [esi]					;move value esi points to into bl   
 000000EA  80 FB 30				cmp bl, '0'						;compare digit to 0 character
 000000ED  7C 14			jl getOut							;jump if less than
 000000EF  80 FB 39				cmp bl, '9'						;compare digit to 9 character
 000000F2  7F 0F			jg getOut							;jump if greater than
 000000F4  80 E3 0F				AND bl, 0Fh

 000000F7  0F AF 05			    imul eax, TEN					;multiply eax by 10
	   00000000 R
 000000FE  03 C3			    add eax, ebx					;add ebx register to eax register.
 00000100  46					inc esi							;increment the ptr
 00000101  EB E5		jmp NextDigit
 00000103				getOut:
 00000103  C3					ret								;returns to main proc.
 00000104			ATOI endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;Procedure to Integer to ASCII.         ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
 00000104			ITOA Proc
 00000104  8B 1D 00000000 R		mov ebx, TEN						;setting base value for the ascii number.
 0000010A				NextDigit: 
 0000010A  BA 00000000				mov edx, NULL					;setup for divide
 0000010F  F7 FB				idiv ebx						;edx ax/ebx
 00000111  83 CA 30				OR edx, '0'						;converting digit to ASCII by adding 30h or '0'
 00000114  4E					dec esi							;decrementing the pointer to get to the next digit  <----goes backwards from LSB to MSB
 00000115  88 16				mov [esi],dl					;mov dl not location esi is pointing at.
 00000117  83 F8 00				cmp eax, NULL					;compares eax to 0.
 0000011A  75 EE			jne NextDigit
 0000011C  C3				ret									;returns to main proc.
 0000011D			ITOA endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;Procedure to BlankOut Memory.          ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000011D			BlankOut Proc
 0000011D  B0 20			mov al, SPC							;moving a blank to al.
 0000011F			blank:
 0000011F  88 06			mov[esi], al						;point to al.
 00000121  46				inc esi								;increment esi pointer.
 00000122  49				dec ecx								;decrement ecx counter.
 00000123  83 F9 00			cmp ecx, NULL						;compare ecx to NULL.
 00000126  75 F7		jne blank
 00000128  C3				ret									;return to main proc.
 00000129			BlankOut endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; Procedure to print data to file.      ;;
				;; uses esi to print characters.         ;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000129			PrintToFile Proc
 00000129			next:
 00000129  8A 16		     mov dl, [esi]						;moving value esi points to into dl
 0000012B  80 FA 00		     cmp dl, NULL						;comparing to 0.
 0000012E  74 14		     je outOfHere
 00000130  8B D6				mov edx, esi					;mov esi into edx.
 00000132  B9 00000001				mov ecx, 1						;move 1 into ecx.
 00000137  A1 0000002F R			mov eax, outfile				;setting eax to handle for outfile.
 0000013C  E8 00000000 E			call WriteToFile				;calling WriteToFile proc.
 00000141  46					inc esi							;incrementing esi index.
 00000142  EB E5		jmp next
 00000144				outOfHere:
 00000144  C3					ret								;returns to main proc.
 00000145			PrintToFile endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;-----------END OF PROGRAM--------------;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				end main
Microsoft (R) Macro Assembler Version 14.24.28316.0	    04/19/20 19:45:18
BDahmer_LinkList.asm					     Symbols 2 - 1




Macros:

                N a m e                 Type

mCapit . . . . . . . . . . . . .	Proc
mPry . . . . . . . . . . . . . .	Proc
mPutchar . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000064C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000145 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ATOI . . . . . . . . . . . . . .	P Near	 000000DE _TEXT	Length= 00000026 Public STDCALL
  NextDigit  . . . . . . . . . .	L Near	 000000E8 _TEXT	
  getOut . . . . . . . . . . . .	L Near	 00000103 _TEXT	
BlankOut . . . . . . . . . . . .	P Near	 0000011D _TEXT	Length= 0000000C Public STDCALL
  blank  . . . . . . . . . . . .	L Near	 0000011F _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ITOA . . . . . . . . . . . . . .	P Near	 00000104 _TEXT	Length= 00000019 Public STDCALL
  NextDigit  . . . . . . . . . .	L Near	 0000010A _TEXT	
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputFileOpenSetup  . . . . . .	P Near	 00000098 _TEXT	Length= 00000011 Public STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PrintToFile  . . . . . . . . . .	P Near	 00000129 _TEXT	Length= 0000001C Public STDCALL
  next . . . . . . . . . . . . .	L Near	 00000129 _TEXT	
  outOfHere  . . . . . . . . . .	L Near	 00000144 _TEXT	
Print_Title  . . . . . . . . . .	P Near	 00000076 _TEXT	Length= 00000022 Public STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFileIntoBuffer . . . . . . .	P Near	 000000A9 _TEXT	Length= 00000035 Public STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadLine . . . . . . . . . . . .	P Near	 00000048 _TEXT	Length= 0000002E Public STDCALL
  newchar  . . . . . . . . . . .	L Near	 00000048 _TEXT	
  R_Arrow  . . . . . . . . . . .	L Near	 00000054 _TEXT	
  BEGONE . . . . . . . . . . . .	L Near	 00000075 _TEXT	
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStr . . . . . . . . . . . .	P Near	 00000039 _TEXT	Length= 0000000F Public STDCALL
  Nextchar . . . . . . . . . . .	L Near	 00000039 _TEXT	
  nearEnd  . . . . . . . . . . .	L Near	 00000047 _TEXT	
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000039 Public STDCALL
  P1 . . . . . . . . . . . . . .	L Near	 0000002B _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
AryEnd . . . . . . . . . . . . .	Byte	 00000634 _DATA	
Ary  . . . . . . . . . . . . . .	Byte	 00000623 _DATA	
BUFF . . . . . . . . . . . . . .	Byte	 00000221 _DATA	
Bry  . . . . . . . . . . . . . .	Byte	 00000635 _DATA	
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CR . . . . . . . . . . . . . . .	Number	 0000000Dh   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DA . . . . . . . . . . . . . . .	Number	 00000050h   
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LA . . . . . . . . . . . . . . .	Number	 0000004Bh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LF . . . . . . . . . . . . . . .	Number	 0000000Ah   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
Msg0 . . . . . . . . . . . . . .	Byte	 000001E7 _DATA	
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RA . . . . . . . . . . . . . . .	Number	 0000004Dh   
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
SPC  . . . . . . . . . . . . . .	Number	 00000020h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TEN  . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
UA . . . . . . . . . . . . . . .	Number	 00000048h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
byteCount  . . . . . . . . . . .	DWord	 00000646 _DATA	
calStr . . . . . . . . . . . . .	Byte	 00000033 _DATA	
col  . . . . . . . . . . . . . .	Byte	 0000064B _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fline  . . . . . . . . . . . . .	Byte	 000001A0 _DATA	
fpos . . . . . . . . . . . . . .	Number	 00000011h   
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
inFN . . . . . . . . . . . . . .	Byte	 00000020 _DATA	
infile . . . . . . . . . . . . .	DWord	 0000002B _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
nline  . . . . . . . . . . . . .	Byte	 000001E4 _DATA	
outFN  . . . . . . . . . . . . .	Byte	 00000004 _DATA	
outfile  . . . . . . . . . . . .	DWord	 0000002F _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
row  . . . . . . . . . . . . . .	Byte	 0000064A _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
